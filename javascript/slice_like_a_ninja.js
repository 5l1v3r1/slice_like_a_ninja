// Generated by CoffeeScript 1.9.1
(function() {
  $(function() {
    var currentString, currentStringHtml, example, getNewStrings, inputCallback, parseInput, targetString, variableName;
    variableName = "var";
    currentString = "foo";
    targetString = "fo";
    currentStringHtml = ("<h5>" + variableName + " = ") + '"';
    currentStringHtml += "" + currentString;
    currentStringHtml += '"</h5>';
    $('#currentString').html(currentStringHtml);
    $('#targetString').html("<h5>" + targetString + "</h5>");
    inputCallback = function(input, term) {
      var ref, result;
      result = parseInput(input);
      if (result === targetString) {
        term.clear();
        ref = getNewStrings(), currentString = ref[0], targetString = ref[1];
        currentStringHtml = ("<h5>" + variableName + " = ") + '"';
        currentStringHtml += "" + currentString;
        currentStringHtml += '"</h5>';
        $('#currentString').html(currentStringHtml);
        $('#targetString').html("<h5>" + targetString + "</h5>");
      } else {
        return result;
      }
    };
    parseInput = function(input) {
      var firstIndex, fullResult, i, index, inputLength, j, numChars, ref, ref1, result, secondIndex, sliceContents, stepSize, variableLength;
      inputLength = input.length;
      if (input[inputLength - 1] !== "]") {
        return "Use a slice.";
      }
      variableLength = variableName.length;
      if (input.slice(0, +variableLength + 1 || 9e9) !== variableName + "[") {
        return "Use a slice.";
      } else {
        sliceContents = input.slice(variableLength + 1, +(inputLength - 2) + 1 || 9e9);
        if (sliceContents === "") {
          return "Use a slice";
        }
        if (!sliceContents.match(":")) {
          index = sliceContents;
          return currentString[index];
        } else {
          ref = sliceContents.split(":"), firstIndex = ref[0], secondIndex = ref[1], stepSize = ref[2];
          if (!firstIndex) {
            firstIndex = 0;
          }
          if (!secondIndex) {
            secondIndex = currentString.length;
          }
          if (!stepSize) {
            stepSize = 1;
          }
          console.log([firstIndex, secondIndex, stepSize]);
          result = currentString.slice(firstIndex, +(secondIndex - 1) + 1 || 9e9);
          if (stepSize < 0) {
            result = result.split("").reverse().join("");
          }
          stepSize = Math.abs(stepSize);
          if (stepSize > 1) {
            numChars = Math.ceil(result.length / stepSize);
            fullResult = result;
            result = "";
            for (i = j = 0, ref1 = numChars - 1; 0 <= ref1 ? j <= ref1 : j >= ref1; i = 0 <= ref1 ? ++j : --j) {
              alert(i * stepSize);
              result += fullResult[i * stepSize];
            }
          }
          return result;
        }
      }
    };
    getNewStrings = function() {
      var pairs, randomPair;
      pairs = [["doggy", "dog"], ["catheter", "cat"], ["couscous", "us"], ["spartacus", "part"], ["robocop", "poco"], ["pacer", "pcr"]];
      randomPair = pairs[Math.floor(Math.random() * pairs.length)];
      return randomPair;
    };
    example = function() {
      var exampleHtml;
      exampleHtml = "<h3>Example goes here</h3>";
      $('#exampleText').html(exampleHtml);
      $('#exampleScreen').foundation('reveal', 'open');
    };
    $('#terminalDiv').terminal(inputCallback, {
      greetings: "",
      prompt: '>>> ',
      onBlur: false,
      name: 'ninja_terminal',
      height: 300,
      exceptionHandler: function(error) {
        return console.log(error);
      }
    });
    return $("#exampleButton").click((function(_this) {
      return function() {
        return example();
      };
    })(this));
  });

}).call(this);
